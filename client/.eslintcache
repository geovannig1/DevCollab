[{"D:\\DevCollab\\client\\src\\index.tsx":"1","D:\\DevCollab\\client\\src\\reportWebVitals.ts":"2","D:\\DevCollab\\client\\src\\App.tsx":"3","D:\\DevCollab\\client\\src\\pages\\Landing.tsx":"4","D:\\DevCollab\\client\\src\\components\\global\\GlobalStyle.tsx":"5","D:\\DevCollab\\client\\src\\styles.ts":"6","D:\\DevCollab\\client\\src\\components\\global\\Button.tsx":"7","D:\\DevCollab\\client\\src\\components\\landing\\Hero.tsx":"8","D:\\DevCollab\\client\\src\\components\\landing\\About.tsx":"9","D:\\DevCollab\\client\\src\\components\\global\\Footer.tsx":"10","D:\\DevCollab\\client\\src\\pages\\Signup.tsx":"11","D:\\DevCollab\\client\\src\\components\\auth\\BaseAuth.tsx":"12","D:\\DevCollab\\client\\src\\pages\\Signin.tsx":"13","D:\\DevCollab\\client\\src\\components\\global\\ScrollToTop.tsx":"14","D:\\DevCollab\\client\\src\\store.ts":"15","D:\\DevCollab\\client\\src\\reducers\\index.ts":"16","D:\\DevCollab\\client\\src\\reducers\\authReducer.ts":"17","D:\\DevCollab\\client\\src\\actions\\authTypes.ts":"18","D:\\DevCollab\\client\\src\\actions\\authActions.ts":"19","D:\\DevCollab\\client\\src\\pages\\Project.tsx":"20","D:\\DevCollab\\client\\src\\components\\global\\LinearProgress.tsx":"21","D:\\DevCollab\\client\\src\\components\\routing\\PrivateRoute.tsx":"22","D:\\DevCollab\\client\\src\\components\\routing\\PublicRoute.tsx":"23","D:\\DevCollab\\client\\src\\reducers\\alertReducer.ts":"24","D:\\DevCollab\\client\\src\\actions\\alertTypes.ts":"25","D:\\DevCollab\\client\\src\\actions\\alertActions.ts":"26","D:\\DevCollab\\client\\src\\components\\global\\Alert.tsx":"27","D:\\DevCollab\\client\\src\\components\\sidebar\\Sidebar.tsx":"28","D:\\DevCollab\\client\\src\\components\\sidebar\\ProfileSidebar.tsx":"29","D:\\DevCollab\\client\\src\\components\\global\\AlertSnackbar.tsx":"30","D:\\DevCollab\\client\\src\\components\\global\\Navbar.tsx":"31","D:\\DevCollab\\client\\src\\reducers\\projectReducer.ts":"32","D:\\DevCollab\\client\\src\\actions\\projectTypes.ts":"33","D:\\DevCollab\\client\\src\\api\\index.ts":"34","D:\\DevCollab\\client\\src\\actions\\projectActions.ts":"35","D:\\DevCollab\\client\\src\\pages\\CreateProject.tsx":"36","D:\\DevCollab\\client\\src\\components\\sidebar\\UserMenu.tsx":"37","D:\\DevCollab\\client\\src\\components\\global\\Card.tsx":"38","D:\\DevCollab\\client\\src\\components\\global\\Paper.tsx":"39","D:\\DevCollab\\client\\src\\utils\\validateEmail.ts":"40","D:\\DevCollab\\client\\src\\components\\global\\CardMenu.tsx":"41","D:\\DevCollab\\client\\src\\components\\global\\AlertDialog.tsx":"42","D:\\DevCollab\\client\\src\\components\\global\\BaseComponent.tsx":"43","D:\\DevCollab\\client\\src\\components\\project\\ProjectForm.tsx":"44","D:\\DevCollab\\client\\src\\pages\\UpdateProject.tsx":"45","D:\\DevCollab\\client\\src\\pages\\NotFound.tsx":"46","D:\\DevCollab\\client\\src\\pages\\UpdateUser.tsx":"47","D:\\DevCollab\\client\\src\\components\\global\\FormContainer.tsx":"48","D:\\DevCollab\\client\\src\\pages\\Activity.tsx":"49","D:\\DevCollab\\client\\src\\reducers\\navbarReducer.ts":"50","D:\\DevCollab\\client\\src\\actions\\navbarTypes.ts":"51","D:\\DevCollab\\client\\src\\actions\\navbarAction.ts":"52","D:\\DevCollab\\client\\src\\pages\\Task.tsx":"53","D:\\DevCollab\\client\\src\\components\\task\\ColumnTasks.tsx":"54","D:\\DevCollab\\client\\src\\components\\task\\Column.tsx":"55","D:\\DevCollab\\client\\src\\components\\task\\Tasks.tsx":"56","D:\\DevCollab\\client\\src\\components\\task\\Task.tsx":"57","D:\\DevCollab\\client\\src\\pages\\CreateTask.tsx":"58","D:\\DevCollab\\client\\src\\components\\global\\Previous.tsx":"59","D:\\DevCollab\\client\\src\\utils\\socketio.ts":"60","D:\\DevCollab\\client\\src\\components\\task\\AddListMenu.tsx":"61","D:\\DevCollab\\client\\src\\components\\task\\EditListMenu.tsx":"62","D:\\DevCollab\\client\\src\\pages\\DetailTask.tsx":"63","D:\\DevCollab\\client\\src\\components\\global\\Avatar.tsx":"64","D:\\DevCollab\\client\\src\\components\\task\\CommentTask.tsx":"65","D:\\DevCollab\\client\\src\\components\\global\\SelectMembers.tsx":"66","D:\\DevCollab\\client\\src\\components\\discussion\\DiscussionCard.tsx":"67","D:\\DevCollab\\client\\src\\pages\\CreateDiscussion.tsx":"68","D:\\DevCollab\\client\\src\\reducers\\discussionReducer.ts":"69","D:\\DevCollab\\client\\src\\actions\\discussionTypes.ts":"70","D:\\DevCollab\\client\\src\\actions\\discussionActions.ts":"71","D:\\DevCollab\\client\\src\\pages\\Discussions.tsx":"72","D:\\DevCollab\\client\\src\\pages\\Discussion.tsx":"73","D:\\DevCollab\\client\\src\\components\\discussion\\DiscussionComment.tsx":"74","D:\\DevCollab\\client\\src\\components\\global\\Comment.tsx":"75","D:\\DevCollab\\client\\src\\components\\discussion\\DiscussionForm.tsx":"76","D:\\DevCollab\\client\\src\\pages\\UpdateDiscussion.tsx":"77","D:\\DevCollab\\client\\src\\pages\\MeetingRooms.tsx":"78","D:\\DevCollab\\client\\src\\components\\meeting\\RoomCard.tsx":"79","D:\\DevCollab\\client\\src\\pages\\CreateRoom.tsx":"80","D:\\DevCollab\\client\\src\\reducers\\meetingReducer.ts":"81","D:\\DevCollab\\client\\src\\actions\\meetingTypes.ts":"82","D:\\DevCollab\\client\\src\\actions\\meetingActions.ts":"83","D:\\DevCollab\\client\\src\\pages\\MeetingRoom.tsx":"84","D:\\DevCollab\\client\\src\\components\\meeting\\Video.tsx":"85","D:\\DevCollab\\client\\src\\components\\meeting\\StyledVideo.tsx":"86","D:\\DevCollab\\client\\src\\components\\meeting\\Controller.tsx":"87","D:\\DevCollab\\client\\src\\components\\meeting\\ShareScreen.tsx":"88","D:\\DevCollab\\client\\src\\components\\meeting\\peer.ts":"89","D:\\DevCollab\\client\\src\\pages\\UpdateMeeting.tsx":"90","D:\\DevCollab\\client\\src\\components\\meeting\\MeetingForm.tsx":"91","D:\\DevCollab\\client\\src\\reducers\\displayReducer.ts":"92","D:\\DevCollab\\client\\src\\actions\\displayTypes.ts":"93","D:\\DevCollab\\client\\src\\actions\\displayActions.ts":"94","D:\\DevCollab\\client\\src\\pages\\Notes.tsx":"95","D:\\DevCollab\\client\\src\\components\\notes\\CardNote.tsx":"96","D:\\DevCollab\\client\\src\\pages\\CreateNote.tsx":"97","D:\\DevCollab\\client\\src\\components\\notes\\NoteForm.tsx":"98","D:\\DevCollab\\client\\src\\reducers\\noteReducer.ts":"99","D:\\DevCollab\\client\\src\\actions\\noteTypes.ts":"100","D:\\DevCollab\\client\\src\\actions\\noteActions.ts":"101","D:\\DevCollab\\client\\src\\pages\\UpdateNote.tsx":"102","D:\\DevCollab\\client\\src\\pages\\Note.tsx":"103","D:\\DevCollab\\client\\src\\pages\\Files.tsx":"104","D:\\DevCollab\\client\\src\\components\\file\\FileCard.tsx":"105","D:\\DevCollab\\client\\src\\pages\\CreateFile.tsx":"106","D:\\DevCollab\\client\\src\\components\\file\\FileForm.tsx":"107","D:\\DevCollab\\client\\src\\actions\\fileActions.ts":"108","D:\\DevCollab\\client\\src\\actions\\fileTypes.ts":"109","D:\\DevCollab\\client\\src\\reducers\\fileReducer.ts":"110","D:\\DevCollab\\client\\src\\pages\\UpdateFile.tsx":"111","D:\\DevCollab\\client\\src\\reducers\\activityReducer.ts":"112","D:\\DevCollab\\client\\src\\actions\\activityTypes.ts":"113","D:\\DevCollab\\client\\src\\actions\\activityActions.ts":"114","D:\\DevCollab\\client\\src\\components\\activity\\ActivityMessage.tsx":"115","D:\\DevCollab\\client\\src\\components\\activity\\ActivityContent.tsx":"116","D:\\DevCollab\\client\\src\\components\\sidebar\\CalendarSidebar.tsx":"117","D:\\DevCollab\\client\\src\\components\\sidebar\\TaskCard.tsx":"118","D:\\DevCollab\\client\\src\\reducers\\taskReducer.ts":"119","D:\\DevCollab\\client\\src\\actions\\taskTypes.ts":"120","D:\\DevCollab\\client\\src\\actions\\taskActions.ts":"121","D:\\DevCollab\\client\\src\\pages\\GithubActivities.tsx":"122","D:\\DevCollab\\client\\src\\components\\github\\GithubCard.tsx":"123","D:\\DevCollab\\client\\src\\pages\\GithubConnection.tsx":"124","D:\\DevCollab\\client\\src\\actions\\githubActions.ts":"125","D:\\DevCollab\\client\\src\\actions\\githubTypes.ts":"126","D:\\DevCollab\\client\\src\\reducers\\githubReducer.ts":"127","D:\\DevCollab\\client\\src\\components\\github\\Commits.tsx":"128","D:\\DevCollab\\client\\src\\components\\github\\Pulls.tsx":"129"},{"size":333,"mtime":1614318028058,"results":"130","hashOfConfig":"131"},{"size":425,"mtime":499162500000,"results":"132","hashOfConfig":"131"},{"size":6529,"mtime":1615123978220,"results":"133","hashOfConfig":"131"},{"size":1021,"mtime":1613034310721,"results":"134","hashOfConfig":"131"},{"size":465,"mtime":1611577015063,"results":"135","hashOfConfig":"131"},{"size":1031,"mtime":1614333414982,"results":"136","hashOfConfig":"131"},{"size":2365,"mtime":1615301462669,"results":"137","hashOfConfig":"131"},{"size":1723,"mtime":1614322251460,"results":"138","hashOfConfig":"131"},{"size":3286,"mtime":1611544648288,"results":"139","hashOfConfig":"131"},{"size":611,"mtime":1611543020857,"results":"140","hashOfConfig":"131"},{"size":4722,"mtime":1613034374039,"results":"141","hashOfConfig":"131"},{"size":3026,"mtime":1615364581009,"results":"142","hashOfConfig":"131"},{"size":3098,"mtime":1613034479599,"results":"143","hashOfConfig":"131"},{"size":490,"mtime":1611144071455,"results":"144","hashOfConfig":"131"},{"size":361,"mtime":1611223292532,"results":"145","hashOfConfig":"131"},{"size":947,"mtime":1615204035394,"results":"146","hashOfConfig":"131"},{"size":2105,"mtime":1612194660635,"results":"147","hashOfConfig":"131"},{"size":2497,"mtime":1614407997353,"results":"148","hashOfConfig":"131"},{"size":5114,"mtime":1615349724939,"results":"149","hashOfConfig":"131"},{"size":2894,"mtime":1612882784324,"results":"150","hashOfConfig":"131"},{"size":1972,"mtime":1611850758323,"results":"151","hashOfConfig":"131"},{"size":978,"mtime":1611388758194,"results":"152","hashOfConfig":"131"},{"size":830,"mtime":1611847155057,"results":"153","hashOfConfig":"131"},{"size":686,"mtime":1611480838490,"results":"154","hashOfConfig":"131"},{"size":468,"mtime":1611924130743,"results":"155","hashOfConfig":"131"},{"size":533,"mtime":1612167115934,"results":"156","hashOfConfig":"131"},{"size":2920,"mtime":1611417788980,"results":"157","hashOfConfig":"131"},{"size":1001,"mtime":1614950040358,"results":"158","hashOfConfig":"131"},{"size":2436,"mtime":1614255760983,"results":"159","hashOfConfig":"131"},{"size":2561,"mtime":1612169490344,"results":"160","hashOfConfig":"131"},{"size":10266,"mtime":1615816636089,"results":"161","hashOfConfig":"131"},{"size":1684,"mtime":1612253088040,"results":"162","hashOfConfig":"131"},{"size":1867,"mtime":1615124488491,"results":"163","hashOfConfig":"131"},{"size":147,"mtime":1611481363359,"results":"164","hashOfConfig":"131"},{"size":3697,"mtime":1614234384208,"results":"165","hashOfConfig":"131"},{"size":3306,"mtime":1614492964979,"results":"166","hashOfConfig":"131"},{"size":2893,"mtime":1612088897864,"results":"167","hashOfConfig":"131"},{"size":3234,"mtime":1614688566453,"results":"168","hashOfConfig":"131"},{"size":425,"mtime":1612703537527,"results":"169","hashOfConfig":"131"},{"size":296,"mtime":1611588188967,"results":"170","hashOfConfig":"131"},{"size":2403,"mtime":1614866562784,"results":"171","hashOfConfig":"131"},{"size":2173,"mtime":1612882727817,"results":"172","hashOfConfig":"131"},{"size":2789,"mtime":1614174270391,"results":"173","hashOfConfig":"131"},{"size":8327,"mtime":1615739417698,"results":"174","hashOfConfig":"131"},{"size":4261,"mtime":1614688579999,"results":"175","hashOfConfig":"131"},{"size":1030,"mtime":1611924804159,"results":"176","hashOfConfig":"131"},{"size":9225,"mtime":1615820554247,"results":"177","hashOfConfig":"131"},{"size":1471,"mtime":1613457000774,"results":"178","hashOfConfig":"131"},{"size":5247,"mtime":1615902522679,"results":"179","hashOfConfig":"131"},{"size":591,"mtime":1612262979912,"results":"180","hashOfConfig":"131"},{"size":441,"mtime":1612262895440,"results":"181","hashOfConfig":"131"},{"size":444,"mtime":1612262933934,"results":"182","hashOfConfig":"131"},{"size":9456,"mtime":1615818718452,"results":"183","hashOfConfig":"131"},{"size":852,"mtime":1614952210256,"results":"184","hashOfConfig":"131"},{"size":5249,"mtime":1615872693749,"results":"185","hashOfConfig":"131"},{"size":753,"mtime":1614952236306,"results":"186","hashOfConfig":"131"},{"size":4419,"mtime":1614952141041,"results":"187","hashOfConfig":"131"},{"size":5352,"mtime":1615816074932,"results":"188","hashOfConfig":"131"},{"size":1204,"mtime":1614609407286,"results":"189","hashOfConfig":"131"},{"size":221,"mtime":1614238744506,"results":"190","hashOfConfig":"131"},{"size":3292,"mtime":1615816146309,"results":"191","hashOfConfig":"131"},{"size":3041,"mtime":1615816283205,"results":"192","hashOfConfig":"131"},{"size":11882,"mtime":1615902967199,"results":"193","hashOfConfig":"131"},{"size":391,"mtime":1614780630016,"results":"194","hashOfConfig":"131"},{"size":3342,"mtime":1615900440127,"results":"195","hashOfConfig":"131"},{"size":2734,"mtime":1614952161584,"results":"196","hashOfConfig":"131"},{"size":4629,"mtime":1615818918021,"results":"197","hashOfConfig":"131"},{"size":3648,"mtime":1614774801994,"results":"198","hashOfConfig":"131"},{"size":2012,"mtime":1614512711597,"results":"199","hashOfConfig":"131"},{"size":2048,"mtime":1614512601904,"results":"200","hashOfConfig":"131"},{"size":4993,"mtime":1614577694734,"results":"201","hashOfConfig":"131"},{"size":3445,"mtime":1614781334326,"results":"202","hashOfConfig":"131"},{"size":5223,"mtime":1615818887683,"results":"203","hashOfConfig":"131"},{"size":4300,"mtime":1615900417748,"results":"204","hashOfConfig":"131"},{"size":2929,"mtime":1615899580223,"results":"205","hashOfConfig":"131"},{"size":3849,"mtime":1615818545854,"results":"206","hashOfConfig":"131"},{"size":5068,"mtime":1614781011778,"results":"207","hashOfConfig":"131"},{"size":4044,"mtime":1614182769009,"results":"208","hashOfConfig":"131"},{"size":4209,"mtime":1615819792114,"results":"209","hashOfConfig":"131"},{"size":3485,"mtime":1614785869442,"results":"210","hashOfConfig":"131"},{"size":1794,"mtime":1614503904553,"results":"211","hashOfConfig":"131"},{"size":1681,"mtime":1614503787285,"results":"212","hashOfConfig":"131"},{"size":3844,"mtime":1614503854444,"results":"213","hashOfConfig":"131"},{"size":10604,"mtime":1614849228104,"results":"214","hashOfConfig":"131"},{"size":1355,"mtime":1614058792761,"results":"215","hashOfConfig":"131"},{"size":841,"mtime":1614333168161,"results":"216","hashOfConfig":"131"},{"size":3237,"mtime":1614333228305,"results":"217","hashOfConfig":"131"},{"size":628,"mtime":1614084951260,"results":"218","hashOfConfig":"131"},{"size":2137,"mtime":1614067613524,"results":"219","hashOfConfig":"131"},{"size":5033,"mtime":1614785858208,"results":"220","hashOfConfig":"131"},{"size":3599,"mtime":1615819778048,"results":"221","hashOfConfig":"131"},{"size":638,"mtime":1614174092746,"results":"222","hashOfConfig":"131"},{"size":345,"mtime":1614170622574,"results":"223","hashOfConfig":"131"},{"size":454,"mtime":1614170698850,"results":"224","hashOfConfig":"131"},{"size":3282,"mtime":1614606467953,"results":"225","hashOfConfig":"131"},{"size":4367,"mtime":1615821266115,"results":"226","hashOfConfig":"131"},{"size":3350,"mtime":1614847034295,"results":"227","hashOfConfig":"131"},{"size":3035,"mtime":1615821251161,"results":"228","hashOfConfig":"131"},{"size":1581,"mtime":1614509719624,"results":"229","hashOfConfig":"131"},{"size":1416,"mtime":1614509370111,"results":"230","hashOfConfig":"131"},{"size":3660,"mtime":1614509586324,"results":"231","hashOfConfig":"131"},{"size":4383,"mtime":1614847044932,"results":"232","hashOfConfig":"131"},{"size":2989,"mtime":1614510515098,"results":"233","hashOfConfig":"131"},{"size":3283,"mtime":1614693908136,"results":"234","hashOfConfig":"131"},{"size":4411,"mtime":1615821833394,"results":"235","hashOfConfig":"131"},{"size":3345,"mtime":1614852553322,"results":"236","hashOfConfig":"131"},{"size":3029,"mtime":1615821625717,"results":"237","hashOfConfig":"131"},{"size":3871,"mtime":1614694143463,"results":"238","hashOfConfig":"131"},{"size":1416,"mtime":1614603714264,"results":"239","hashOfConfig":"131"},{"size":1536,"mtime":1614603906805,"results":"240","hashOfConfig":"131"},{"size":4360,"mtime":1614852567580,"results":"241","hashOfConfig":"131"},{"size":924,"mtime":1615810026789,"results":"242","hashOfConfig":"131"},{"size":1289,"mtime":1615809792055,"results":"243","hashOfConfig":"131"},{"size":1359,"mtime":1615809978059,"results":"244","hashOfConfig":"131"},{"size":3954,"mtime":1615780613939,"results":"245","hashOfConfig":"131"},{"size":1273,"mtime":1615902476446,"results":"246","hashOfConfig":"131"},{"size":4376,"mtime":1615873091791,"results":"247","hashOfConfig":"131"},{"size":1438,"mtime":1615027123004,"results":"248","hashOfConfig":"131"},{"size":720,"mtime":1614955763834,"results":"249","hashOfConfig":"131"},{"size":1400,"mtime":1614955691160,"results":"250","hashOfConfig":"131"},{"size":745,"mtime":1614955848231,"results":"251","hashOfConfig":"131"},{"size":4429,"mtime":1615903422360,"results":"252","hashOfConfig":"131"},{"size":3368,"mtime":1615382958609,"results":"253","hashOfConfig":"131"},{"size":5714,"mtime":1615903175027,"results":"254","hashOfConfig":"131"},{"size":4549,"mtime":1615719621982,"results":"255","hashOfConfig":"131"},{"size":2695,"mtime":1615719037699,"results":"256","hashOfConfig":"131"},{"size":2388,"mtime":1615720961728,"results":"257","hashOfConfig":"131"},{"size":2125,"mtime":1615719634843,"results":"258","hashOfConfig":"131"},{"size":2072,"mtime":1615724994853,"results":"259","hashOfConfig":"131"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},"7jeh35",{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"262"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"262"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"262"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},"D:\\DevCollab\\client\\src\\index.tsx",[],["522","523"],"D:\\DevCollab\\client\\src\\reportWebVitals.ts",[],"D:\\DevCollab\\client\\src\\App.tsx",[],"D:\\DevCollab\\client\\src\\pages\\Landing.tsx",[],"D:\\DevCollab\\client\\src\\components\\global\\GlobalStyle.tsx",[],"D:\\DevCollab\\client\\src\\styles.ts",[],"D:\\DevCollab\\client\\src\\components\\global\\Button.tsx",[],"D:\\DevCollab\\client\\src\\components\\landing\\Hero.tsx",[],"D:\\DevCollab\\client\\src\\components\\landing\\About.tsx",[],"D:\\DevCollab\\client\\src\\components\\global\\Footer.tsx",[],"D:\\DevCollab\\client\\src\\pages\\Signup.tsx",[],"D:\\DevCollab\\client\\src\\components\\auth\\BaseAuth.tsx",[],"D:\\DevCollab\\client\\src\\pages\\Signin.tsx",[],"D:\\DevCollab\\client\\src\\components\\global\\ScrollToTop.tsx",[],"D:\\DevCollab\\client\\src\\store.ts",[],"D:\\DevCollab\\client\\src\\reducers\\index.ts",[],"D:\\DevCollab\\client\\src\\reducers\\authReducer.ts",[],"D:\\DevCollab\\client\\src\\actions\\authTypes.ts",[],"D:\\DevCollab\\client\\src\\actions\\authActions.ts",[],"D:\\DevCollab\\client\\src\\pages\\Project.tsx",[],"D:\\DevCollab\\client\\src\\components\\global\\LinearProgress.tsx",[],"D:\\DevCollab\\client\\src\\components\\routing\\PrivateRoute.tsx",[],"D:\\DevCollab\\client\\src\\components\\routing\\PublicRoute.tsx",[],"D:\\DevCollab\\client\\src\\reducers\\alertReducer.ts",[],"D:\\DevCollab\\client\\src\\actions\\alertTypes.ts",[],"D:\\DevCollab\\client\\src\\actions\\alertActions.ts",[],"D:\\DevCollab\\client\\src\\components\\global\\Alert.tsx",[],"D:\\DevCollab\\client\\src\\components\\sidebar\\Sidebar.tsx",[],"D:\\DevCollab\\client\\src\\components\\sidebar\\ProfileSidebar.tsx",[],"D:\\DevCollab\\client\\src\\components\\global\\AlertSnackbar.tsx",[],"D:\\DevCollab\\client\\src\\components\\global\\Navbar.tsx",["524"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { AnyAction } from 'redux';\r\n\r\nimport { setColor, setShadow } from '../../styles';\r\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { Store } from '../../store';\r\nimport { NavbarInitialState } from '../../reducers/navbarReducer';\r\nimport { SelectedType } from '../../actions/navbarTypes';\r\nimport { ProjectInitialState } from '../../reducers/projectReducer';\r\nimport { AuthInitialState } from '../../reducers/authReducer';\r\nimport { AccessPermission } from '../../actions/projectTypes';\r\nimport {\r\n  loadRepo,\r\n  setCommitNotification,\r\n  setPullNotification,\r\n  loadEvents,\r\n} from '../../actions/githubActions';\r\nimport { GithubInitialState } from '../../reducers/githubReducer';\r\nimport socket from '../../utils/socketio';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { ActivityInitialState } from '../../reducers/activityReducer';\r\nimport { loadActivity, receiveActivity } from '../../actions/activityActions';\r\nimport { ActivityTypes } from '../../actions/activityTypes';\r\n\r\ninterface NavbarProps {\r\n  loadRepo: (projectId: string) => Promise<void>;\r\n  loadEvents: (projectId: string) => Promise<void>;\r\n  setCommitNotification: (totalNotification: number) => void;\r\n  setPullNotification: (totalNotification: number) => void;\r\n  loadActivity: (projectId: string) => Promise<void>;\r\n  receiveActivity: (activityData: ActivityTypes) => void;\r\n  navbar: NavbarInitialState;\r\n  project: ProjectInitialState;\r\n  auth: AuthInitialState;\r\n  github: GithubInitialState;\r\n  activity: ActivityInitialState;\r\n}\r\n\r\nconst Navbar: React.FC<NavbarProps> = ({\r\n  loadRepo,\r\n  loadEvents,\r\n  setCommitNotification,\r\n  setPullNotification,\r\n  loadActivity,\r\n  receiveActivity,\r\n  navbar,\r\n  project: { selectedProject },\r\n  auth: { user },\r\n  github: { repo, events, commitEvent, pullEvent },\r\n  activity: { activity },\r\n}) => {\r\n  useEffect(() => {\r\n    if (selectedProject) {\r\n      loadRepo(selectedProject._id);\r\n      loadEvents(selectedProject._id);\r\n    }\r\n  }, [selectedProject, loadRepo, loadEvents]);\r\n\r\n  //find user in the project\r\n  const userProject = selectedProject?.members.find(\r\n    (member) => member.user._id === user?._id\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (repo) {\r\n      //Join to repository room\r\n      socket.emit('join repo', { repoId: repo.node_id });\r\n\r\n      //Emit commit listener\r\n      socket.emit('listen commit', {\r\n        repoId: repo.node_id,\r\n      });\r\n\r\n      //Emit pull request listener\r\n      socket.emit('listen pull', {\r\n        repoId: repo.node_id,\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      socket.emit('leave repo', { repoId: repo?.node_id });\r\n      socket.emit('unregister event');\r\n    };\r\n  }, [repo]);\r\n\r\n  //Store all event notification\r\n  const [githubNotification, setGithubNotification] = useState(0);\r\n  //Store every github commits\r\n  const [commitReceiver, setCommitReceiver] = useState<string[]>([]);\r\n  //Store every \"opened\" github pull request\r\n  const [pullReceiver, setPullReceiver] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    //Listen every github commit\r\n    socket.on('receive commit', (data: { nodeId: string }) => {\r\n      setCommitReceiver((prevData) => [...prevData, data.nodeId]);\r\n    });\r\n    //Listen every github pull request\r\n    socket.on('receive pull', (data: { nodeId: string }) => {\r\n      setPullReceiver((prevData) => [...prevData, data.nodeId]);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (events) {\r\n      setGithubNotification(\r\n        (events.totalCommit ?? 0) +\r\n          (events.totalPull ?? 0) +\r\n          (commitReceiver.length + pullReceiver.length)\r\n      );\r\n\r\n      setCommitNotification((events.totalCommit ?? 0) + commitReceiver.length);\r\n      setPullNotification((events.totalPull ?? 0) + pullReceiver.length);\r\n    }\r\n  }, [\r\n    commitReceiver,\r\n    pullReceiver,\r\n    events,\r\n    setCommitNotification,\r\n    setPullNotification,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    //Reset commitReceiver\r\n    if (!commitEvent && commitReceiver.length !== 0) {\r\n      setCommitReceiver([]);\r\n    }\r\n    //Reset pullReceiver\r\n    if (!pullEvent && pullReceiver.length !== 0) {\r\n      setPullReceiver([]);\r\n    }\r\n  }, [commitEvent, pullEvent]);\r\n\r\n  //Handle activity notification\r\n  useEffect(() => {\r\n    //Load the activity\r\n    if (selectedProject) {\r\n      loadActivity(selectedProject?._id);\r\n\r\n      socket.emit('join project', { projectId: selectedProject?._id });\r\n\r\n      //Listen to new messages\r\n      socket.on('receive activity message', (data: ActivityTypes) => {\r\n        receiveActivity(data);\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      socket.emit('leave project', { projectId: selectedProject?._id });\r\n    };\r\n  }, [loadActivity, receiveActivity, selectedProject]);\r\n\r\n  const userNotif = activity?.notifications?.find(\r\n    (notification) => notification.user === user?._id\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <ul>\r\n        <li>\r\n          <StyledLink\r\n            to={`/projects/${selectedProject?._id}/activity`}\r\n            selected={navbar.selected === SelectedType.Activity}\r\n          >\r\n            <Badge\r\n              color='secondary'\r\n              badgeContent={userNotif?.totalNotifications}\r\n            >\r\n              <ImportExportIcon />\r\n            </Badge>\r\n            <Text>Activity</Text>\r\n            <div />\r\n          </StyledLink>\r\n        </li>\r\n\r\n        <li>\r\n          <StyledLink\r\n            to={`/projects/${selectedProject?._id}/tasks`}\r\n            selected={navbar.selected === SelectedType.Task}\r\n          >\r\n            <PlaylistAddCheckIcon />\r\n            <Text>Tasks</Text>\r\n            <div />\r\n          </StyledLink>\r\n        </li>\r\n\r\n        <li>\r\n          <StyledLink\r\n            to={`/projects/${selectedProject?._id}/discussions`}\r\n            selected={navbar.selected === SelectedType.Discussions}\r\n          >\r\n            <QuestionAnswerIcon />\r\n            <Text>Discussions</Text>\r\n            <div />\r\n          </StyledLink>\r\n        </li>\r\n\r\n        <li>\r\n          <StyledLink\r\n            to={`/projects/${selectedProject?._id}/meeting-rooms`}\r\n            selected={navbar.selected === SelectedType.Meeting}\r\n          >\r\n            <VideocamIcon />\r\n            <Text>Meeting Rooms</Text>\r\n            <div />\r\n          </StyledLink>\r\n        </li>\r\n\r\n        <li>\r\n          <StyledLink\r\n            to={`/projects/${selectedProject?._id}/github-activity`}\r\n            selected={navbar.selected === SelectedType.Github}\r\n          >\r\n            <Badge color='secondary' badgeContent={githubNotification}>\r\n              <GitHubIcon />\r\n            </Badge>\r\n            <Text>GitHub Activity</Text>\r\n            <div />\r\n          </StyledLink>\r\n        </li>\r\n\r\n        <li>\r\n          <StyledLink\r\n            to={`/projects/${selectedProject?._id}/notes`}\r\n            selected={navbar.selected === SelectedType.Notes}\r\n          >\r\n            <NoteAddIcon />\r\n            <Text>Notes</Text>\r\n            <div />\r\n          </StyledLink>\r\n        </li>\r\n\r\n        <li>\r\n          <StyledLink\r\n            to={`/projects/${selectedProject?._id}/files`}\r\n            selected={navbar.selected === SelectedType.Files}\r\n          >\r\n            <AttachFileIcon />\r\n            <Text>Files</Text>\r\n            <div />\r\n          </StyledLink>\r\n        </li>\r\n        {userProject?.accessPermission === AccessPermission.Admin && (\r\n          <li>\r\n            <StyledLink to={`/projects/${selectedProject?._id}/edit`}>\r\n              <SettingsIcon />\r\n              <Text>Settings</Text>\r\n              <div />\r\n            </StyledLink>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: Store) => ({\r\n  navbar: state.navbar,\r\n  project: state.project,\r\n  auth: state.auth,\r\n  github: state.github,\r\n  activity: state.activity,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>) => ({\r\n  loadRepo: (projectId: string) => dispatch(loadRepo(projectId)),\r\n  loadEvents: (projectId: string) => dispatch(loadEvents(projectId)),\r\n  setCommitNotification: (totalNotification: number) =>\r\n    dispatch(setCommitNotification(totalNotification)),\r\n  setPullNotification: (totalNotification: number) =>\r\n    dispatch(setPullNotification(totalNotification)),\r\n  loadActivity: (projectId: string) => dispatch(loadActivity(projectId)),\r\n  receiveActivity: (activityData: ActivityTypes) =>\r\n    dispatch(receiveActivity(activityData)),\r\n});\r\n\r\nconst Container = styled.nav`\r\n  background-color: ${setColor.mainWhite};\r\n  box-shadow: ${setShadow.main};\r\n  width: 100%;\r\n  margin: 20px 0;\r\n  border-radius: 10px;\r\n\r\n  ul {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    height: 70px;\r\n  }\r\n  li {\r\n    list-style-type: none;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)<{ selected?: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  outline: none;\r\n  user-select: none;\r\n  color: ${({ selected }) =>\r\n    selected ? setColor.primaryDark : setColor.lightBlack};\r\n  transition: 0.2s ease-in-out;\r\n\r\n  div {\r\n    transition: 0.2s ease-in-out;\r\n    width: 100%;\r\n    border-top: ${({ selected }) =>\r\n        selected ? setColor.primaryDark : setColor.mainWhite}\r\n      3px solid;\r\n  }\r\n\r\n  &:hover {\r\n    color: ${({ selected }) => !selected && setColor.primary};\r\n  }\r\n`;\r\n\r\nconst Text = styled.span`\r\n  font-weight: 600;\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n","D:\\DevCollab\\client\\src\\reducers\\projectReducer.ts",[],"D:\\DevCollab\\client\\src\\actions\\projectTypes.ts",[],"D:\\DevCollab\\client\\src\\api\\index.ts",[],"D:\\DevCollab\\client\\src\\actions\\projectActions.ts",[],"D:\\DevCollab\\client\\src\\pages\\CreateProject.tsx",[],"D:\\DevCollab\\client\\src\\components\\sidebar\\UserMenu.tsx",[],"D:\\DevCollab\\client\\src\\components\\global\\Card.tsx",[],"D:\\DevCollab\\client\\src\\components\\global\\Paper.tsx",[],"D:\\DevCollab\\client\\src\\utils\\validateEmail.ts",[],"D:\\DevCollab\\client\\src\\components\\global\\CardMenu.tsx",[],"D:\\DevCollab\\client\\src\\components\\global\\AlertDialog.tsx",[],"D:\\DevCollab\\client\\src\\components\\global\\BaseComponent.tsx",[],"D:\\DevCollab\\client\\src\\components\\project\\ProjectForm.tsx",[],"D:\\DevCollab\\client\\src\\pages\\UpdateProject.tsx",[],"D:\\DevCollab\\client\\src\\pages\\NotFound.tsx",[],"D:\\DevCollab\\client\\src\\pages\\UpdateUser.tsx",[],"D:\\DevCollab\\client\\src\\components\\global\\FormContainer.tsx",[],"D:\\DevCollab\\client\\src\\pages\\Activity.tsx",[],"D:\\DevCollab\\client\\src\\reducers\\navbarReducer.ts",[],"D:\\DevCollab\\client\\src\\actions\\navbarTypes.ts",[],"D:\\DevCollab\\client\\src\\actions\\navbarAction.ts",[],"D:\\DevCollab\\client\\src\\pages\\Task.tsx",[],"D:\\DevCollab\\client\\src\\components\\task\\ColumnTasks.tsx",[],"D:\\DevCollab\\client\\src\\components\\task\\Column.tsx",[],"D:\\DevCollab\\client\\src\\components\\task\\Tasks.tsx",[],"D:\\DevCollab\\client\\src\\components\\task\\Task.tsx",[],"D:\\DevCollab\\client\\src\\pages\\CreateTask.tsx",[],"D:\\DevCollab\\client\\src\\components\\global\\Previous.tsx",[],"D:\\DevCollab\\client\\src\\utils\\socketio.ts",[],"D:\\DevCollab\\client\\src\\components\\task\\AddListMenu.tsx",[],"D:\\DevCollab\\client\\src\\components\\task\\EditListMenu.tsx",[],"D:\\DevCollab\\client\\src\\pages\\DetailTask.tsx",[],"D:\\DevCollab\\client\\src\\components\\global\\Avatar.tsx",[],"D:\\DevCollab\\client\\src\\components\\task\\CommentTask.tsx",[],"D:\\DevCollab\\client\\src\\components\\global\\SelectMembers.tsx",[],"D:\\DevCollab\\client\\src\\components\\discussion\\DiscussionCard.tsx",[],"D:\\DevCollab\\client\\src\\pages\\CreateDiscussion.tsx",[],"D:\\DevCollab\\client\\src\\reducers\\discussionReducer.ts",[],"D:\\DevCollab\\client\\src\\actions\\discussionTypes.ts",[],"D:\\DevCollab\\client\\src\\actions\\discussionActions.ts",[],"D:\\DevCollab\\client\\src\\pages\\Discussions.tsx",[],"D:\\DevCollab\\client\\src\\pages\\Discussion.tsx",["525"],"import React, { Fragment, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AnyAction } from 'redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { useParams, Redirect } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport dayjs from 'dayjs';\r\n\r\nimport { setColor, setRem } from '../styles';\r\nimport { Store } from '../store';\r\nimport { loadProject } from '../actions/projectActions';\r\nimport { ProjectInitialState } from '../reducers/projectReducer';\r\nimport { setNavbar, clearNavbar } from '../actions/navbarAction';\r\nimport { SelectedType } from '../actions/navbarTypes';\r\nimport Paper from '../components/global/Paper';\r\nimport Previous from '../components/global/Previous';\r\nimport {\r\n  loadDiscussion,\r\n  clearSelectedDiscussion,\r\n} from '../actions/discussionActions';\r\nimport { DiscussionInitialState } from '../reducers/discussionReducer';\r\nimport AttachmentIcon from '@material-ui/icons/Attachment';\r\nimport DiscussionComment from '../components/discussion/DiscussionComment';\r\nimport { AuthInitialState } from '../reducers/authReducer';\r\nimport socket from '../utils/socketio';\r\n\r\ninterface DiscussionProps {\r\n  loadProject: (projectId: string) => Promise<void>;\r\n  setNavbar: (selected: SelectedType) => void;\r\n  clearNavbar: () => void;\r\n  loadDiscussion: (projectId: string, discussionId: string) => Promise<void>;\r\n  clearSelectedDiscussion: () => void;\r\n  project: ProjectInitialState;\r\n  discussion: DiscussionInitialState;\r\n  auth: AuthInitialState;\r\n}\r\n\r\nconst Discussion: React.FC<DiscussionProps> = ({\r\n  loadProject,\r\n  setNavbar,\r\n  clearNavbar,\r\n  loadDiscussion,\r\n  clearSelectedDiscussion,\r\n  project: { selectedProject, projectError },\r\n  discussion: { selectedDiscussion },\r\n  auth: { user },\r\n}) => {\r\n  const { projectId, discussionId } = useParams<{\r\n    projectId: string;\r\n    discussionId: string;\r\n  }>();\r\n\r\n  useEffect(() => {\r\n    document.title = 'Discussion | DevCollab';\r\n    setNavbar(SelectedType.Discussions);\r\n\r\n    !selectedProject && loadProject(projectId);\r\n    projectError && <Redirect to='/projects' />;\r\n\r\n    return () => {\r\n      clearNavbar();\r\n      clearSelectedDiscussion();\r\n    };\r\n  }, [\r\n    loadProject,\r\n    projectId,\r\n    selectedProject,\r\n    projectError,\r\n    setNavbar,\r\n    clearNavbar,\r\n    clearSelectedDiscussion,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    loadDiscussion(projectId, discussionId);\r\n  }, [loadDiscussion, projectId, discussionId]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {selectedDiscussion && (\r\n        <Paper>\r\n          <Previous\r\n            link={`/projects/${projectId}/discussions`}\r\n            previousTo='Discussions'\r\n            title={selectedDiscussion.title}\r\n          />\r\n          <Container>\r\n            {selectedDiscussion.creator && (\r\n              <Creator>\r\n                {`Created by ${selectedDiscussion.creator} on ${dayjs(\r\n                  selectedDiscussion.date\r\n                ).format('DD MMM YYYY')}`}\r\n              </Creator>\r\n            )}\r\n\r\n            <p>{selectedDiscussion.description}</p>\r\n\r\n            {selectedDiscussion.attachment && (\r\n              <AttachmentLink\r\n                target='_blank'\r\n                rel='noopener noreferrer'\r\n                href={selectedDiscussion.attachment?.url}\r\n              >\r\n                <AttachmentIcon fontSize='small' />\r\n                <span>Attachment</span>\r\n              </AttachmentLink>\r\n            )}\r\n          </Container>\r\n\r\n          <Line />\r\n\r\n          <DiscussionComment\r\n            selectedDiscussion={selectedDiscussion}\r\n            selectedProject={selectedProject}\r\n            user={user}\r\n          />\r\n        </Paper>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: Store) => ({\r\n  project: state.project,\r\n  discussion: state.discussion,\r\n  auth: state.auth,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>) => ({\r\n  loadProject: (projectId: string) => dispatch(loadProject(projectId)),\r\n  setNavbar: (selected: SelectedType) => dispatch(setNavbar(selected)),\r\n  clearNavbar: () => dispatch(clearNavbar()),\r\n  loadDiscussion: (projectId: string, discussionId: string) =>\r\n    dispatch(loadDiscussion(projectId, discussionId)),\r\n  clearSelectedDiscussion: () => dispatch(clearSelectedDiscussion()),\r\n});\r\n\r\nconst Container = styled.div`\r\n  margin: 10px 0;\r\n  p {\r\n    margin: 10px 0;\r\n  }\r\n`;\r\n\r\nconst Creator = styled.span`\r\n  font-size: ${setRem(14)};\r\n  color: ${setColor.lightBlack};\r\n`;\r\n\r\nconst AttachmentLink = styled.a`\r\n  background-color: ${setColor.primary};\r\n  color: ${setColor.mainWhite};\r\n  text-decoration: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 13%;\r\n  padding: 5px;\r\n  margin: 10px 0;\r\n  border-radius: 8px;\r\n  transition: 0.3s ease-in-out;\r\n  &:hover {\r\n    background-color: ${setColor.primaryDark};\r\n  }\r\n  &:active {\r\n    background-color: ${setColor.primary};\r\n  }\r\n  span {\r\n    font-size: ${setRem(14)};\r\n  }\r\n`;\r\n\r\nconst Line = styled.span`\r\n  display: block;\r\n  width: 100%;\r\n  border-top: 2px solid ${setColor.darkGrey};\r\n  margin: 20px 0;\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Discussion);\r\n","D:\\DevCollab\\client\\src\\components\\discussion\\DiscussionComment.tsx",[],"D:\\DevCollab\\client\\src\\components\\global\\Comment.tsx",[],"D:\\DevCollab\\client\\src\\components\\discussion\\DiscussionForm.tsx",[],"D:\\DevCollab\\client\\src\\pages\\UpdateDiscussion.tsx",[],"D:\\DevCollab\\client\\src\\pages\\MeetingRooms.tsx",[],"D:\\DevCollab\\client\\src\\components\\meeting\\RoomCard.tsx",[],"D:\\DevCollab\\client\\src\\pages\\CreateRoom.tsx",[],"D:\\DevCollab\\client\\src\\reducers\\meetingReducer.ts",[],"D:\\DevCollab\\client\\src\\actions\\meetingTypes.ts",[],"D:\\DevCollab\\client\\src\\actions\\meetingActions.ts",[],"D:\\DevCollab\\client\\src\\pages\\MeetingRoom.tsx",["526"],"import React, { useEffect, useRef, useState, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { AnyAction } from 'redux';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { Socket } from 'socket.io-client';\r\nimport styled from 'styled-components';\r\n\r\nimport { Store } from '../store';\r\nimport { loadMeeting } from '../actions/meetingActions';\r\nimport { MeetingInitialState } from '../reducers/meetingReducer';\r\nimport socket from '../utils/socketio';\r\nimport { AuthInitialState } from '../reducers/authReducer';\r\nimport Video from '../components/meeting/Video';\r\nimport {\r\n  StyledVideo,\r\n  StyledVideoContainer,\r\n} from '../components/meeting/StyledVideo';\r\nimport { setColor } from '../styles';\r\nimport Controller from '../components/meeting/Controller';\r\nimport { ReactComponent as Logo } from '../assets/logo-white.svg';\r\nimport { IPeers } from '../components/meeting/PeerTypes';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport ShareScreen from '../components/meeting/ShareScreen';\r\nimport {\r\n  createPeer,\r\n  addPeer,\r\n  addPeerScreen,\r\n  createPeerScreen,\r\n} from '../components/meeting/peer';\r\nimport { setFullscreen, clearFullscreen } from '../actions/displayActions';\r\n\r\ninterface MeetingRoomProps {\r\n  meeting: MeetingInitialState;\r\n  auth: AuthInitialState;\r\n  loadMeeting: (projectId: string, meetingId: string) => Promise<void>;\r\n  setFullscreen: (fullscreen: boolean) => void;\r\n  clearFullscreen: () => void;\r\n}\r\n\r\nconst MeetingRoom: React.FC<MeetingRoomProps> = ({\r\n  meeting: { selectedMeeting, meetingError },\r\n  setFullscreen,\r\n  clearFullscreen,\r\n  loadMeeting,\r\n  auth: { user },\r\n}) => {\r\n  const { projectId, meetingId } = useParams<{\r\n    projectId: string;\r\n    meetingId: string;\r\n  }>();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    document.title = 'Meeting Room | DevCollab';\r\n    loadMeeting(projectId, meetingId);\r\n\r\n    setFullscreen(true);\r\n\r\n    return () => clearFullscreen();\r\n  }, [loadMeeting, projectId, meetingId, setFullscreen, clearFullscreen]);\r\n\r\n  //Redirect unauthorized user\r\n  if (meetingError.msg === 'Unauthorized') {\r\n    history.push(`/projects/${projectId}/meeting-rooms`);\r\n  }\r\n\r\n  const videoConstraints = {\r\n    width: 420,\r\n    height: 200,\r\n  };\r\n\r\n  const [videoPeers, setVideoPeers] = useState<IPeers[]>([]);\r\n  const socketRef = useRef<Socket>();\r\n  const userVideo = useRef<HTMLVideoElement>(null);\r\n  const peersRef = useRef<IPeers[]>([]);\r\n  const [screenPeers, setScreenPeers] = useState<IPeers[]>([]);\r\n  const screenPeersRef = useRef<IPeers[]>([]);\r\n  const screenVideo = useRef<HTMLVideoElement>(null);\r\n\r\n  useEffect(() => {\r\n    //Render only after selectedMeeting exist\r\n    if (selectedMeeting) {\r\n      (async () => {\r\n        socketRef.current = socket;\r\n\r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n          video: videoConstraints,\r\n          audio: true,\r\n        });\r\n\r\n        if (userVideo.current) userVideo.current.srcObject = stream;\r\n\r\n        //Join the meeting room\r\n        socketRef.current?.emit('join room', {\r\n          meetingId,\r\n          userId: user?._id,\r\n        });\r\n\r\n        //Get the other user data for the current user\r\n        socketRef.current?.on('all users', (users: any) => {\r\n          const peers: IPeers[] = [];\r\n\r\n          users.forEach((userId: string) => {\r\n            const peer = createPeer(socketRef, userId, user?._id ?? '', stream);\r\n\r\n            peersRef.current.push({ peerId: userId, peer });\r\n\r\n            peers.push({ peerId: userId, peer });\r\n          });\r\n\r\n          setVideoPeers(peers);\r\n        });\r\n\r\n        //Receive offer from other user\r\n        socketRef.current?.on('user joined', (data: any) => {\r\n          const peer = addPeer(\r\n            data.signal,\r\n            data.callerId,\r\n            stream,\r\n            socketRef,\r\n            user\r\n          );\r\n          peersRef.current.push({ peerId: data.callerId, peer });\r\n          const peerObj = {\r\n            peerId: data.callerId,\r\n            peer,\r\n          };\r\n\r\n          setVideoPeers([...videoPeers, peerObj]);\r\n        });\r\n\r\n        //Receive share screen signal offer from other user\r\n        socketRef.current.on('receive signal screen', (data: any) => {\r\n          const peer = addPeerScreen(\r\n            data.signal,\r\n            data.callerId,\r\n            socketRef,\r\n            user\r\n          );\r\n\r\n          screenPeersRef.current.push({ peerId: data.callerId, peer });\r\n\r\n          const peerObj = {\r\n            peerId: data.callerId,\r\n            peer,\r\n          };\r\n\r\n          setScreenPeers([...screenPeers, peerObj]);\r\n        });\r\n\r\n        //Receive answer from other\r\n        socketRef.current?.on('receiving returned signal', (data: any) => {\r\n          const item = peersRef.current.find((p) => p.peerId === data.id);\r\n\r\n          item?.peer.signal(data.signal);\r\n        });\r\n\r\n        //Receive answer screen from other\r\n        socketRef.current?.on(\r\n          'receiving returned screen signal',\r\n          (data: any) => {\r\n            const item = screenPeersRef.current.find(\r\n              (p) => p.peerId === data.id\r\n            );\r\n\r\n            item?.peer.signal(data.signal);\r\n          }\r\n        );\r\n\r\n        //Handle user left from meeting\r\n        socketRef.current?.on('user left', (id: string) => {\r\n          const peerObj = peersRef.current.find((p) => p.peerId === id);\r\n\r\n          if (peerObj) {\r\n            peerObj.peer.destroy();\r\n          }\r\n          const peers = peersRef.current.filter((p) => p.peerId !== id);\r\n\r\n          peersRef.current = peers;\r\n\r\n          setVideoPeers(peers);\r\n        });\r\n\r\n        //Remove the displayed share screen\r\n        socketRef.current?.on('share screen ended', () => {\r\n          screenPeersRef.current.forEach((screenPeer) => {\r\n            screenPeer.peer.destroy();\r\n          });\r\n          setScreenPeers([]);\r\n          screenPeersRef.current = [];\r\n        });\r\n      })();\r\n    }\r\n  }, []);\r\n\r\n  const [mute, setMute] = useState(false);\r\n\r\n  //Send audio condition to other users (muted/not muted)\r\n  useEffect(() => {\r\n    socket.emit('send audio', { mute, userId: user?._id });\r\n  }, [videoPeers, mute, user?._id]);\r\n\r\n  //Mute or unmute the audio\r\n  const setAudio = () => {\r\n    const mediaStream: any = userVideo.current?.srcObject;\r\n    const enabled = mediaStream?.getAudioTracks()?.[0].enabled;\r\n    setMute(mediaStream?.getAudioTracks()?.[0].enabled ?? true);\r\n\r\n    if (enabled) {\r\n      mediaStream.getAudioTracks()[0].enabled = false;\r\n    } else {\r\n      if (mediaStream) mediaStream.getAudioTracks()[0].enabled = true;\r\n    }\r\n  };\r\n\r\n  const [cameraDisable, setCameraDisable] = useState(false);\r\n  //Turn on or turn off the camera\r\n  const setVideo = () => {\r\n    const mediaStream: any = userVideo.current?.srcObject;\r\n\r\n    const enabled = mediaStream?.getVideoTracks()?.[0].enabled;\r\n    setCameraDisable(mediaStream?.getVideoTracks()?.[0].enabled ?? true);\r\n\r\n    if (enabled) {\r\n      mediaStream.getVideoTracks()[0].enabled = false;\r\n    } else {\r\n      if (mediaStream) mediaStream.getVideoTracks()[0].enabled = true;\r\n    }\r\n  };\r\n\r\n  //Function to share the screen\r\n  const shareScreen = async () => {\r\n    const mediaDevices: any = navigator.mediaDevices;\r\n\r\n    //Get the user screen display\r\n    const stream = await mediaDevices.getDisplayMedia({ cursor: true });\r\n    const screenTrack = stream.getVideoTracks()[0];\r\n    if (screenVideo.current) screenVideo.current.srcObject = stream;\r\n\r\n    videoPeers.forEach((userPeer) => {\r\n      const peer = createPeerScreen(\r\n        socketRef,\r\n        userPeer.peerId,\r\n        user?._id ?? '',\r\n        stream\r\n      );\r\n\r\n      screenPeersRef.current.push({ peerId: userPeer.peerId, peer });\r\n    });\r\n\r\n    //When the share screen ended\r\n    screenTrack.onended = () => {\r\n      //emit peer to other users\r\n      videoPeers.forEach((userPeer) => {\r\n        socket.emit('end share screen', userPeer);\r\n      });\r\n      screenPeersRef.current.forEach((screenPeer) => {\r\n        screenPeer.peer.destroy();\r\n      });\r\n      screenPeersRef.current = [];\r\n      if (screenVideo.current) screenVideo.current.srcObject = null;\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {selectedMeeting && (\r\n        <Container>\r\n          <Nav>\r\n            <Logo />\r\n          </Nav>\r\n          <VideoContainer>\r\n            <StyledVideoContainer>\r\n              <StyledVideo\r\n                width='420'\r\n                height='200'\r\n                muted\r\n                ref={userVideo}\r\n                autoPlay\r\n                playsInline\r\n              />\r\n              <span>\r\n                {mute && <MicOffIcon fontSize='small' />}\r\n                {user?.firstName} {user?.lastName}\r\n              </span>\r\n            </StyledVideoContainer>\r\n            {videoPeers.map((peer) => (\r\n              <Video\r\n                key={peer.peerId}\r\n                selectedMeeting={selectedMeeting}\r\n                peer={peer}\r\n              />\r\n            ))}\r\n\r\n            {/* Only render one share screen */}\r\n            {screenPeers.length > 0 && <ShareScreen peer={screenPeers[0]} />}\r\n          </VideoContainer>\r\n\r\n          <Controller\r\n            projectId={projectId}\r\n            mute={mute}\r\n            cameraDisable={cameraDisable}\r\n            setAudio={setAudio}\r\n            setVideo={setVideo}\r\n            shareScreen={shareScreen}\r\n          />\r\n        </Container>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: Store) => ({\r\n  meeting: state.meeting,\r\n  auth: state.auth,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AnyAction>) => ({\r\n  loadMeeting: (projectId: string, meetingId: string) =>\r\n    dispatch(loadMeeting(projectId, meetingId)),\r\n  setFullscreen: (fullscreen: boolean) => dispatch(setFullscreen(fullscreen)),\r\n  clearFullscreen: () => dispatch(clearFullscreen()),\r\n});\r\n\r\nconst Container = styled.div`\r\n  background-color: ${setColor.mainBlack};\r\n  position: relative;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Nav = styled.nav`\r\n  width: 100%;\r\n  height: 10vh;\r\n  position: relative;\r\n  background-color: ${setColor.mainBlack};\r\n  svg {\r\n    width: 150px;\r\n    position: absolute;\r\n    top: 5px;\r\n    left: 10px;\r\n    user-select: none;\r\n  }\r\n`;\r\n\r\nconst VideoContainer = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  overflow-y: auto;\r\n  flex-wrap: wrap;\r\n  height: 80vh;\r\n`;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetingRoom);\r\n","D:\\DevCollab\\client\\src\\components\\meeting\\Video.tsx",[],"D:\\DevCollab\\client\\src\\components\\meeting\\StyledVideo.tsx",[],"D:\\DevCollab\\client\\src\\components\\meeting\\Controller.tsx",[],"D:\\DevCollab\\client\\src\\components\\meeting\\ShareScreen.tsx",[],"D:\\DevCollab\\client\\src\\components\\meeting\\peer.ts",[],"D:\\DevCollab\\client\\src\\pages\\UpdateMeeting.tsx",[],"D:\\DevCollab\\client\\src\\components\\meeting\\MeetingForm.tsx",[],"D:\\DevCollab\\client\\src\\reducers\\displayReducer.ts",[],"D:\\DevCollab\\client\\src\\actions\\displayTypes.ts",[],"D:\\DevCollab\\client\\src\\actions\\displayActions.ts",[],"D:\\DevCollab\\client\\src\\pages\\Notes.tsx",[],"D:\\DevCollab\\client\\src\\components\\notes\\CardNote.tsx",[],"D:\\DevCollab\\client\\src\\pages\\CreateNote.tsx",[],"D:\\DevCollab\\client\\src\\components\\notes\\NoteForm.tsx",[],"D:\\DevCollab\\client\\src\\reducers\\noteReducer.ts",[],"D:\\DevCollab\\client\\src\\actions\\noteTypes.ts",[],"D:\\DevCollab\\client\\src\\actions\\noteActions.ts",[],"D:\\DevCollab\\client\\src\\pages\\UpdateNote.tsx",[],"D:\\DevCollab\\client\\src\\pages\\Note.tsx",[],"D:\\DevCollab\\client\\src\\pages\\Files.tsx",[],"D:\\DevCollab\\client\\src\\components\\file\\FileCard.tsx",[],"D:\\DevCollab\\client\\src\\pages\\CreateFile.tsx",[],"D:\\DevCollab\\client\\src\\components\\file\\FileForm.tsx",[],"D:\\DevCollab\\client\\src\\actions\\fileActions.ts",[],"D:\\DevCollab\\client\\src\\actions\\fileTypes.ts",[],"D:\\DevCollab\\client\\src\\reducers\\fileReducer.ts",[],"D:\\DevCollab\\client\\src\\pages\\UpdateFile.tsx",[],"D:\\DevCollab\\client\\src\\reducers\\activityReducer.ts",[],"D:\\DevCollab\\client\\src\\actions\\activityTypes.ts",[],"D:\\DevCollab\\client\\src\\actions\\activityActions.ts",[],"D:\\DevCollab\\client\\src\\components\\activity\\ActivityMessage.tsx",[],"D:\\DevCollab\\client\\src\\components\\activity\\ActivityContent.tsx",[],"D:\\DevCollab\\client\\src\\components\\sidebar\\CalendarSidebar.tsx",[],"D:\\DevCollab\\client\\src\\components\\sidebar\\TaskCard.tsx",[],"D:\\DevCollab\\client\\src\\reducers\\taskReducer.ts",[],"D:\\DevCollab\\client\\src\\actions\\taskTypes.ts",[],"D:\\DevCollab\\client\\src\\actions\\taskActions.ts",[],"D:\\DevCollab\\client\\src\\pages\\GithubActivities.tsx",[],"D:\\DevCollab\\client\\src\\components\\github\\GithubCard.tsx",[],"D:\\DevCollab\\client\\src\\pages\\GithubConnection.tsx",[],"D:\\DevCollab\\client\\src\\actions\\githubActions.ts",[],"D:\\DevCollab\\client\\src\\actions\\githubTypes.ts",[],"D:\\DevCollab\\client\\src\\reducers\\githubReducer.ts",[],"D:\\DevCollab\\client\\src\\components\\github\\Commits.tsx",[],"D:\\DevCollab\\client\\src\\components\\github\\Pulls.tsx",[],{"ruleId":"527","replacedBy":"528"},{"ruleId":"529","replacedBy":"530"},{"ruleId":"531","severity":1,"message":"532","line":143,"column":6,"nodeType":"533","endLine":143,"endColumn":30,"suggestions":"534"},{"ruleId":"535","severity":1,"message":"536","line":25,"column":8,"nodeType":"537","messageId":"538","endLine":25,"endColumn":14},{"ruleId":"531","severity":1,"message":"539","line":195,"column":6,"nodeType":"533","endLine":195,"endColumn":8,"suggestions":"540"},"no-native-reassign",["541"],"no-negated-in-lhs",["542"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'commitReceiver.length' and 'pullReceiver.length'. Either include them or remove the dependency array.","ArrayExpression",["543"],"@typescript-eslint/no-unused-vars","'socket' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'meetingId', 'screenPeers', 'selectedMeeting', 'user', 'videoConstraints', and 'videoPeers'. Either include them or remove the dependency array. You can also do a functional update 'setVideoPeers(v => ...)' if you only need 'videoPeers' in the 'setVideoPeers' call.",["544"],"no-global-assign","no-unsafe-negation",{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},"Update the dependencies array to be: [commitEvent, commitReceiver.length, pullEvent, pullReceiver.length]",{"range":"549","text":"550"},"Update the dependencies array to be: [meetingId, screenPeers, selectedMeeting, user, videoConstraints, videoPeers]",{"range":"551","text":"552"},[4809,4833],"[commitEvent, commitReceiver.length, pullEvent, pullReceiver.length]",[6048,6050],"[meetingId, screenPeers, selectedMeeting, user, videoConstraints, videoPeers]"]